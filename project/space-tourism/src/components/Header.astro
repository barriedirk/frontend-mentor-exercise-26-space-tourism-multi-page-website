---
import Container from "./Container.astro";

interface Props {
  urlActive?: string;
}

const { urlActive = "" } = Astro.props;
---

<header
  id="header"
  class="header h-fit fixed top-0 left-0 w-full lg:pt-[30px]"
  role="banner"
>
  <Container className="h-[80px] flex flex-row items-center justify-between">
    <a
      class="header__logo w-[40px] h-[40px] inline-block flex-none basis-[40px]"
      href="/"
      aria-label="Go to homepage"
    >
      <svg class="logo w-[40px] h-[40px]" aria-label="Bookmark logo">
        <use href="./assets/shared/logo.svg#icon-planet"></use>
      </svg>
    </a>
    <div class="header__separator" aria-hidden="true"></div>
    <nav class="header__nav" role="navigation" aria-label="Primary navigation">
      <button
        id="headerBtnToggle"
        class="header__toggle bg-transparent border-0"
        aria-label="Toggle navigation menu"
        aria-expanded="false"
        aria-controls="header-menu"
      >
        <span class="sr-only">Open/Close button</span>
      </button>
      <ul
        id="header-menu"
        class="header__nav-list text-preset-8"
        role="menubar"
      >
        {
          [
            { href: "/", label: "Home", index: "00" },
            { href: "/destination", label: "Destination", index: "01" },
            { href: "/crew", label: "Crew", index: "02" },
            { href: "/technology", label: "Technology", index: "03" },
          ].map(({ href, label, index }) => (
            <li class="header__nav-item" role="none">
              <a
                href={href}
                role="menuitem"
                class={`header__nav-link hover-underline ${
                  urlActive === href ? "is-active" : ""
                }`}
                tabindex="-1"
              >
                <strong>{index}</strong> {label}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </Container>
</header>

<script>
  const $body = document.querySelector("body");
  const $btnToggle = document.querySelector("#headerBtnToggle");
  const $$menuLinks = document.querySelectorAll(".header__nav-link");

  $$menuLinks.forEach(($link: Element) => {
    $link.addEventListener("click", () => {
      $body!.classList.remove("is-expanded");
      $btnToggle!.setAttribute("aria-expanded", "false");
    });
  });

  $btnToggle!.addEventListener("click", async (evt) => {
    evt.preventDefault();

    const isExpanded = $btnToggle!.getAttribute("aria-expanded") == "true";

    $btnToggle!.setAttribute("aria-expanded", !isExpanded ? "true" : "false");

    isExpanded
      ? $body!.classList.remove("is-expanded")
      : $body!.classList.add("is-expanded");
  });
</script>
