---
interface Images {
  png: string;
  webp: string;
}

interface Destination {
  name: string;
  images: Images;
  description: string;
  distance: string;
  travel: string;
}

import BaseLayout from "../layouts/BaseLayout.astro";
import Container from "../components/Container.astro";

import data from "../data/data.json";
const destinations = data.destinations as Destination[];
const {
  images: { png, webp },
  name,
} = destinations[0];
---

<BaseLayout title="Destination" urlActive="/destination">
  <Container className="pt-[100px]">
    <div class="destination mx-auto">
      <h1
        class="destination__title text-preset-5 flex flex-row items-center justify-center gap-4 uppercase mb-6"
      >
        <span class="color-aluminium">01</span> Pick your destination
      </h1>
      <div class="destination-information">
        <div
          class="destination__celestial-body--wrapper flex flex-row items-center justify-center"
        >
          <picture id="celestialImage" class="destination__celestial-body">
            <source id="celestialImageWebp" srcset={webp} type="image/webp" />
            <img
              id="celestialImageFallback"
              src={png}
              alt={`Image of ${name}`}
            />
          </picture>
        </div>
        <div class="destination__content text-preset-8">
          <div
            class="tabs destination__tabs text-preset-8 flex flex-row items-center gap-7"
            role="tablist"
            aria-label="Destinations"
          >
            {
              destinations.map(({ name }, idx) => (
                <button
                  type="button"
                  class={`tabs__tab uppercase hover-underline ${idx === 0 ? "is-active" : ""}`}
                  id={`tab-${idx + 1}`}
                  role="tab"
                  aria-selected="true"
                  aria-controls={`panel-${idx + 1}`}
                  tabindex={`${idx === 0 ? "0" : "-1"}`}
                  data-tab={`${name}`}
                >
                  <span>{name}</span>
                </button>
              ))
            }
          </div>
          <div class="panels mt-6">
            {
              destinations.map(
                ({ name, description, distance, travel }, idx) => (
                  <div
                    id={`panel-${idx + 1}`}
                    class="panel destination_info"
                    role="tabpanel"
                    tabindex={`${idx === 0 ? "0" : "-1"}`}
                    hidden={idx > 0}
                  >
                    <h2 class="destination_info__title uppercase text-preset-2">
                      {name}
                    </h2>
                    <p class="destination_info__description color-blue-300 text-preset-9">
                      {description}
                    </p>
                    <hr class="separator" />
                    <div class="destination-meta">
                      <div class="destination-meta__distance">
                        <span class="meta-label color-blue-300 uppercase text-preset-7">
                          Avg. Distance
                        </span>
                        <span class="meta-value uppercase text-preset-6">
                          {distance}
                        </span>
                      </div>
                      <div class="destination-meta__travel-time">
                        <span class="meta-label color-blue-300 uppercase text-preset-7">
                          Est. Travel Time
                        </span>
                        <span class="meta-value uppercase text-preset-6">
                          {travel}
                        </span>
                      </div>
                    </div>
                  </div>
                )
              )
            }
          </div>
        </div>
      </div>
    </div>
  </Container>

  <script type="module" define:vars={{ destinations }}>
    import { initializeTabs } from "./scripts/tabs.js";

    (() => {
      initializeTabs(destinations);
    })();
  </script>
</BaseLayout>

<style>
  body {
    background-image: url("./assets/destination/background-destination-mobile.jpg");
  }

  .tabs__tab {
    color: var(--clr-blue-300);
  }

  .tabs__tab.is-active {
    color: var(--clr-white);
  }

  .destination__tabs {
    height: 50px;
    justify-content: center;
  }

  .destination_info__title {
    margin-block: 24px;
  }

  .destination_info__title,
  .destination_info__description {
    text-align: center;
  }

  .destination_info__description {
    max-width: 512px;
  }

  .destination .hover-underline::after {
    bottom: -15px;
  }

  .destination__title {
    text-align: center;
  }

  .destination .separator {
    margin-block: 24px;
  }

  .destination-information {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .destination__celestial-body--wrapper {
    width: 327px;
    height: 203px;
  }

  .destination__celestial-body {
    max-height: 150px;
    max-width: 150px;
    aspect-ratio: 1 / 1;
  }

  .destination-meta__travel-time,
  .destination-meta__distance {
    margin-top: 24px;
    gap: 24px;
    @apply flex flex-col justify-center items-center;
  }

  @media screen and (min-width: 48em) {
    body {
      background-image: url("./assets/destination/background-destination-tablet.jpg");
    }

    .destination {
      max-width: 768px;
    }

    .destination__title {
      justify-content: flex-start;
    }

    .destination__celestial-body--wrapper {
      width: 100%;
      min-height: 384px;
      height: 100%;
    }

    .destination__celestial-body {
      max-height: 300px;
      max-width: 300px;
    }

    .destination-meta {
      display: flex;
      flex-direction: row;
      gap: 20px;
      justify-content: space-between;
      align-items: top;
    }

    .destination-meta__travel-time,
    .destination-meta__distance {
      flex: 1;
    }
  }

  @media screen and (min-width: 66em) {
    .destination {
      max-width: 1200px;
    }

    .destination__celestial-body {
      max-height: 480px;
      max-width: 480px;
    }

    .destination-information {
      margin-top: 130px;
    }

    .destination__tabs,
    .panels {
      max-width: 445px;
    }

    .destination__tabs {
      justify-content: flex-start;
    }

    .destination_info__title,
    .destination_info__description {
      text-align: left;
    }

    .destination-meta__travel-time,
    .destination-meta__distance {
      align-items: flex-start;
    }

    .destination-information {
      display: flex;
      flex-direction: row;
      align-items: flex-start;
      justify-content: space-between;
      gap: 100px;
    }

    .destination__content,
    .destination__celestial-body--wrapper {
      flex: 1;
    }
  }

  @media screen and (min-width: 90em) {
    body {
      background-image: url("./assets/destination/background-destination-desktop.jpg");
    }
  }
</style>
